services:
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: API_symfony_php
    volumes:
      - ./symfony:/var/www/symfony
      - php_socket:/var/run/php
    depends_on:
      - database
    environment:
      DATABASE_URL: ${DATABASE_URL}
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: API_symfony_nginx
    ports:
      - "8080:80"
    volumes:
      - ./symfony:/var/www/symfony
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - php_socket:/var/run/php
    depends_on:
      - php
    restart: unless-stopped

  node:
    image: node:18
    container_name: API_symfony_node
    working_dir: /var/www/symfony
    volumes:
      - ./symfony:/var/www/symfony
    ports:
      - "8082:8082"
    depends_on:
      - php
    command: tail -f /dev/null

  database:
    image: mysql:8.0
    container_name: API_symfony_db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: API_symfony_phpmyadmin
    environment:
      PMA_HOST: database
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "8081:80"
    depends_on:
      - database
    restart: unless-stopped

  composer:
    image: composer:latest
    container_name: API_symfony_composer
    volumes:
      - ./symfony:/app
    working_dir: /app 

volumes:
  db_data:
  php_socket:
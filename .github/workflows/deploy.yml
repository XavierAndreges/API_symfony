name: Deploy to GKE

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}

jobs:

  verify-auth:
    name: Verify Workload Identity Token
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Debug GitHub Actions context
        run: |
          echo "=== GITHUB ACTIONS CONTEXT (used for JWT generation) ==="
          echo "Repository: ${{ github.repository }}"
          echo "Ref: ${{ github.ref }}"
          echo "SHA: ${{ github.sha }}"
          echo "Actor: ${{ github.actor }}"
          echo "Event: ${{ github.event_name }}"
          echo "Workflow: ${{ github.workflow }}"
          echo "Job: ${{ github.job }}"
          echo "Run ID: ${{ github.run_id }}"
          echo "Run Number: ${{ github.run_number }}"

      - name: Debug environment before auth
        run: |
          echo "=== DEBUG: Environment variables ==="
          echo "PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}"
          echo "WIF_PROVIDER: ${{ secrets.WIF_PROVIDER }}"
          echo "GCP_SA_EMAIL: ${{ secrets.GCP_SA_EMAIL }}"

      - name: Authenticate using Workload Identity Federation
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: 'id_token'
          id_token_audience: 'github-actions' # adapte si ton provider GCP attend autre chose
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}

      - name: Decode and inspect ID token
        run: |
          echo "${{ steps.auth.outputs.id_token }}" | cut -d "." -f2 | base64 -d | jq


  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
    - uses: actions/checkout@v3

    - name: Debug GitHub Actions context
      run: |
        echo "=== GITHUB ACTIONS CONTEXT (used for JWT generation) ==="
        echo "Repository: ${{ github.repository }}"
        echo "Ref: ${{ github.ref }}"
        echo "SHA: ${{ github.sha }}"
        echo "Actor: ${{ github.actor }}"
        echo "Event: ${{ github.event_name }}"
        echo "Workflow: ${{ github.workflow }}"
        echo "Job: ${{ github.job }}"
        echo "Run ID: ${{ github.run_id }}"
        echo "Run Number: ${{ github.run_number }}"

    - name: Debug environment before auth
      run: |
        echo "=== DEBUG: Environment variables ==="
        echo "PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}"
        echo "WIF_PROVIDER: ${{ secrets.WIF_PROVIDER }}"
        echo "GCP_SA_EMAIL: ${{ secrets.GCP_SA_EMAIL }}"

    - id: auth
      name: 'Authenticate to Google Cloud'
      uses: google-github-actions/auth@v2
      continue-on-error: true
      with:
        token_format: 'id_token'
        id_token_audience: 'github-actions'
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: ${{ secrets.GCP_SA_EMAIL }}

    - name: 'Debug token (even if auth failed)'
      run: |
        echo "=== DEBUG: Token content ==="
        if [ -n "${{ steps.auth.outputs.id_token }}" ]; then
          echo "${{ steps.auth.outputs.id_token }}" | cut -d "." -f2 | base64 -d | jq
        else
          echo "No token found - authentication failed"
          echo "Check the error message above for details"
        fi

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: 'Get GKE Credentials'
      run: |
        gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $PROJECT_ID

    - name: 'Deploy to GKE'
      run: |
        cd k8s/prod
        kustomize edit set image xandreges/symfony-php:prod=${{ github.sha }}
        kustomize build . | kubectl apply -f - 